"%nosecurity":
  quarkus:
    oidc-client:
      enabled: false
    keycloak:
      policy-enforcer:
        enable: false
    oidc:
      enabled: false
    security:
      users:
        embedded:
          enabled: false

"%basicsecurity":
  quarkus:
    security:
      users:
        embedded:
          enabled: true
          plain-text: true
          users:
            admin: admin
          roles:
            admin: admin
    http:
      auth:
        permission:
          authenticated:
            paths: /api/v1/sample*
            policy: authenticated
            enabled: true
    oidc-client:
      enabled: false
    keycloak:
      policy-enforcer:
        enable: false
    oidc:
      enabled: false
  basicauth:
    username: admin
    password: admin

"%oidcsecurity":
  quarkus:
    security:
      users:
        embedded:
          enabled: false
    http:
      auth:
        permission:
          authenticated:
            paths: /api/v1/sample*
            policy: authenticated
            enabled: true
    oidc:
      enabled: true
      application-type: service
      client-id: client-id
      credentials:
        secret: g1Em7XldvPPnnmhluamE0Gve4n2ao7kr
      auth-server-url: http://localhost:18080/realms/quarkus
    oidc-client:
      credentials:
        secret: g1Em7XldvPPnnmhluamE0Gve4n2ao7kr
      client-id: client-id
      grant:
        type: client
      enabled: true
      early-tokens-acquisition: true
      auth-server-url: http://localhost:18080/realms/quarkus

"%mtlssecurity1":
  quarkus:
    oidc-client:
      enabled: false
    keycloak:
      policy-enforcer:
        enable: false
    oidc:
      enabled: false
      auth-server-url: http://nullhost
    security:
      users:
        embedded:
          enabled: false
    http:
      handle-100-continue-automatically: true
      ssl-port: 8443
      ssl:
        client-auth: none
      port: 0
    rest-client:
      remoteService:
        key-store: classpath:/META-INF/resources/client.keystore
        key-store-password: password
        trust-store: classpath:/META-INF/resources/server.keystore
        trust-store-password: password
        follow-redirects: true
        read-timeout: 10000
        connection-ttl: 120000
        url: https://localhost:8444


"%mtlssecurity2":
  quarkus:
    oidc-client:
      enabled: false
    keycloak:
      policy-enforcer:
        enable: false
    oidc:
      enabled: false
      auth-server-url: http://nullhost
    security:
      users:
        embedded:
          enabled: false
    http:
      handle-100-continue-automatically: true
      port: 0
      ssl-port: 8444
      ssl:
        certificate:
          key-store-file: META-INF/resources/server.keystore
          key-store-password: password
          trust-store-file: META-INF/resources/client.keystore
          trust-store-password: password
        client-auth: required
      auth:
        permission:
          authenticated:
            paths: /api/v1/sample*
            policy: authenticated
            enabled: true
    rest-client:
      remoteService:
        key-store: classpath:/META-INF/resources/client.keystore
        key-store-password: password
        trust-store: classpath:/META-INF/resources/server.keystore
        trust-store-password: password
        follow-redirects: true
        read-timeout: 10000
        connection-ttl: 120000
        url: https://localhost:8443

quarkus:
  rest-client:
    remoteService:
      url: http://localhost:8080
  log:
    console:
      json: false
    level: TRACE
  oidc:
    enabled: false
  oidc-client:
    enabled: false
  keycloak:
    policy-enforcer:
      enable: false
  security:
    users:
      embedded:
        enabled: false
  http:
    auth:
      permission:
        authenticated:
          paths: /api/v1/sample*
          policy: authenticated
          enabled: false
  tls:
    trust-all: true
  profile:
org:
  eclipse:
    microprofile:
      rest:
        client:
          propagateHeaders: Authorization